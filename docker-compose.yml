services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: app
    command: uvicorn --host 0.0.0.0 --port 8000 --log-level debug --reload --workers ${WORKERS:-4} --lifespan off core.asgi:application
    env_file:
      - docker/.env
    restart: always
    depends_on:
      - db
    volumes:
      - ./project:/app
      - ./volumes/media:/app/media
      - ./volumes/static:/app/static

  redis:
    image: redis:5-alpine
    container_name: redis
    env_file: docker/.env
    restart: always
    volumes:
      - ./volumes/redis/data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    container_name: db
    restart: always
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data/
    env_file:
      - docker/.env

  celery:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: celery
    env_file: docker/.env
    restart: always
    volumes:
      - ./project:/app
      - ./volumes/media:/media
    depends_on:
      - db
      - redis
    command: celery -A core worker -l info -B -c ${WORKERS:-4}
    healthcheck:
      test: [ "CMD-SHELL", "celery -A apps inspect ping" ]
      interval: 5s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d
      - ./volumes/static:/var/www/static
      - ./volumes/media:/var/www/media
    depends_on:
      - app
    ports:
      - "80:80"